plugins {//この画面は、プログラムのバージョンアップするときなどに使い、開発時はあまり使わない。
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'raisetech'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {//第10回で追加。
    compileOnly {
        extendsFrom annotationProcessor//この、アノテーションプロセッサー入れるために、ランボックの機能入れる。
    }
}


repositories {
    mavenCentral()
}

dependencies {
    //Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'//プログラム実行するとき使う
    //Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    //Validation=入力チェック
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //OpenAPI Generator=API仕様書作成用
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    //「apache.commons lang」= 便利機能、ユーティリティ
    implementation 'org.apache.commons:commons-lang3:3.17.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //MySQLドライバ
    runtimeOnly 'com.mysql:mysql-connector-j'

    //MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'//プログラム実行するとき”のみ”使う
    testImplementation 'org.springframework.boot:spring-boot-starter-test'//testするときだけ使う
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {//グレイドルに”test”を追加できる　
    useJUnitPlatform()//
}
